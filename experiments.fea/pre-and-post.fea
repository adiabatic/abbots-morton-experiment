# ends at the Short height, but the left side could be anything
@_2s = [
    it-qs.2s it-qs.b2s
    no-qs.2s no-qs.s2s
];

# not sure if this should be *does 2b* or *could do 2b*. Currently the latter.
@_2b = [
            it-qs       it-qs.s2
            it-qs.2b it-qs.s2b
            no-qs.alt.2b no-qs.alt.b2b
];

# the letter before this should be a 2s (end at the Short height)
@preceding_2s_plz = [
    it-qs it-qs.s2 it-qs.s2b
    no-qs no-qs.s2 no-qs.s2s
];

@preceding_2b_plz = [
    it-qs       it-qs.b2 it-qs.b2s
    no-qs.alt   no-qs.alt.b2 no-qs.alt.b2b
];

# figure out when we should use:
# - no vs. upside-down-no
# - utter vs. alternate-utter
# - fee that starts at the top left and ends at Short vs. starts at Short and doesn't end
# - etc.
lookup determine_variants {
    sub no-qs it-qs no-qs'      by no-qs.alt;
    sub she-qs      no-qs'      by no-qs.alt;
    sub no-qs.alt   no-qs'      by no-qs.alt;
    sub it-qs it-qs no-qs'      by no-qs.alt;
} determine_variants;

# it-qs, no-qs, roe-qs, ox-qs (as in "on")
lookup calt_pass_1 {
    sub         it-qs'          @preceding_2s_plz by it-qs.2s;
    sub         it-qs'          @preceding_2b_plz by it-qs.2b;
    
    sub         no-qs'          @preceding_2s_plz by no-qs.2s;
    sub         no-qs.alt'      @preceding_2b_plz by no-qs.alt.2b;
} calt_pass_1;

lookup calt_pass_2 {
    sub @_2s it-qs'     by it-qs.s2;    
    sub @_2s it-qs.2s'  by it-qs.s2b; # seems problematic; necessary for it-qs strings
    sub @_2b it-qs'     by it-qs.b2;
    sub @_2b it-qs.2s'  by it-qs.b2s;
    sub @_2s it-qs.2b'  by it-qs.s2b;
    
    sub @_2b    no-qs'          @preceding_2b_plz           by no-qs.alt.b2b;
    
    sub @_2s    no-qs'                                      by no-qs.s2;
    sub @_2s    no-qs.2s'                                   by no-qs.s2s;
    sub @_2b    no-qs.alt'                                  by no-qs.alt.b2;
    sub @_2b    no-qs.alt.2b'                               by no-qs.alt.b2b;
} calt_pass_2;

feature calt {
    lookup determine_variants;
    lookup calt_pass_1;
    lookup calt_pass_2;
} calt;
